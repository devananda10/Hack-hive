import 'package:flutter/material.dart';

void main() {
  runApp(ParkEase());
}

class ParkEase extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'ParkEase',
      theme: ThemeData(
        primarySwatch: Colors.lightGreen,
      ),
      home: ParkingListingPage(),
    );
  }
}

class ParkingListingPage extends StatelessWidget {
  final List<ParkingArea> parkingAreas = [
    ParkingArea(name: 'Parking Area 1', availableSlots: 20),
    ParkingArea(name: 'Parking Area 2', availableSlots: 15),
    ParkingArea(name: 'Parking Area 3', availableSlots: 10),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('ParkingAreas'),
      ),
      body: ListView.builder(
        itemCount: parkingAreas.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(parkingAreas[index].name),
            subtitle:
                Text('Available Slots: ${parkingAreas[index].availableSlots}'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) =>
                      MovieDetailsPage(movie: parkingAreas[index]),
                ),
              );
            },
          );
        },
      ),
    );
  }
}

class MovieDetailsPage extends StatelessWidget {
  final ParkingArea movie;

  MovieDetailsPage({required this.movie});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(movie.name),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text('AvailableSlots: ${movie.availableSlots}'),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => BookingPage(movie: movie),
                  ),
                );
              },
              child: Text('Book Your Slot'),
            ),
          ],
        ),
      ),
    );
  }
}

class BookingPage extends StatefulWidget {
  final ParkingArea movie;

  BookingPage({required this.movie});

  @override
  _BookingPageState createState() => _BookingPageState();
}

class _BookingPageState extends State<BookingPage> {
  List<String> selectedSeats = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Book Slots'),
      ),
      body: Column(
        children: [
          Text('Selected Parking Area: ${widget.movie.name}'),
          Text('Select your slots:'),
          GridView.count(
            crossAxisCount: 5,
            shrinkWrap: true,
            children: List.generate(20, (index) {
              final seatNumber = index + 1;
              return GestureDetector(
                onTap: () {
                  setState(() {
                    final seat = 'Slot $seatNumber';
                    if (selectedSeats.contains(seat)) {
                      selectedSeats.remove(seat);
                    } else {
                      selectedSeats.add(seat);
                    }
                  });
                },
                child: Container(
                  margin: EdgeInsets.all(5),
                  color: selectedSeats.contains('Slot $seatNumber')
                      ? Colors.red
                      : Colors.green,
                  child: Center(child: Text('Slot $seatNumber')),
                ),
              );
            }),
          ),
          ElevatedButton(
            onPressed: () {
              // Implement ticket booking logic here
              showDialog(
                context: context,
                builder: (BuildContext context) {
                  return AlertDialog(
                    title: Text('Success'),
                    content: Text('Slots are booked successfully!'),
                    actions: [
                      TextButton(
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: Text('Close'),
                      ),
                    ],
                  );
                },
              );
            },
            child: Text('Confirm Booking'),
          ),
        ],
      ),
    );
  }
}


class ParkingArea {
  final String name;
  final int availableSlots;

  ParkingArea({required this.name, required this.availableSlots});
}
